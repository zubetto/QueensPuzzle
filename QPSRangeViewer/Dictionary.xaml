<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:QPSRangeViewer" 
                    xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero">

    <!-- *** BRUSHES *** -->
    <SolidColorBrush x:Key="SolidColor_ActiveCyan" Color="#FFBEE6FD"/>
    <SolidColorBrush x:Key="SolidColor_ForeGrey" Color="#FFB6B6B6"/>
    <SolidColorBrush x:Key="SolidColor_Border" Color="#FF4E4E4E"/>
    <SolidColorBrush x:Key="SolidColor_Background" Color="#FF3C3C3C"/>
    <SolidColorBrush x:Key="SolidColor_TextBoxBack" Color="#FF202020"/>
    <SolidColorBrush x:Key="SolidColor_ForeBlue" Color="#FF2196FF"/>
    <SolidColorBrush x:Key="SolidColor_ForeGreyShape" Color="#FFA5A5A5"/>

    <SolidColorBrush x:Key="DisabledBackgroundBrush" Color="#FF343434"/>
    <SolidColorBrush x:Key="DisabledForegroundBrush" Color="#FF424242"/>

    <!--BUTTON TEMPLATE-->
    <ControlTemplate x:Key="ButtonControlTemplate1" TargetType="{x:Type Button}">
        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True" Background="{TemplateBinding Background}">
            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsFocused" Value="True">
                <!--Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="#FFBEE6FD"/-->
                <!--Setter Property="Background" TargetName="border" Value="#FFBEE6FD"/-->
                <!--Setter Property="BorderBrush" TargetName="border" Value="#FFBEE6FD"/-->
            </Trigger>
            <Trigger Property="IsDefaulted" Value="True">
                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <!--Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="#FFBEE6FD"/-->
                <Setter Property="Background" TargetName="border" Value="#BF474C65"/>
                <!--Setter Property="BorderBrush" TargetName="border" Value="#FFBEE6FD"/-->
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <!--Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="White"/-->
                <Setter Property="Background" TargetName="border" Value="#FF030717"/>
                <!--Setter Property="BorderBrush" TargetName="border" Value="#FF2C628B"/-->
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="True">
                <Setter Property="Background" TargetName="border" Value="#FFBCDDEE"/>
                <Setter Property="BorderBrush" TargetName="border" Value="#FF245A83"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" TargetName="border" Value="{StaticResource DisabledBackgroundBrush}"/>
                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource DisabledBackgroundBrush}"/>
                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource DisabledForegroundBrush}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--BUTTON STYLE-->
    <Style x:Key="OpenBttStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{StaticResource SolidColor_Background}"/>
        <Setter Property="Foreground" Value="{StaticResource SolidColor_ForeGrey}" />
        <Setter Property="BorderBrush" Value="{StaticResource SolidColor_Border}"/>
        <Setter Property="Template" Value="{StaticResource ButtonControlTemplate1}"/>
    </Style>
    <LinearGradientBrush x:Key="TextBoxBorder" EndPoint="0,20" MappingMode="Absolute" StartPoint="0,0">
        <GradientStop Color="#ABADB3" Offset="0.05"/>
        <GradientStop Color="#E2E3EA" Offset="0.07"/>
        <GradientStop Color="#E3E9EF" Offset="1"/>
    </LinearGradientBrush>

    <!--TEXT BOX-->
    <Style x:Key="InfoTextBoxStyle" BasedOn="{x:Null}" TargetType="{x:Type TextBox}">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
        <Setter Property="BorderBrush" Value="{StaticResource TextBoxBorder}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="AllowDrop" Value="true"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Themes:ListBoxChrome x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" RenderFocused="{TemplateBinding IsKeyboardFocusWithin}" SnapsToDevicePixels="true">
                        <ScrollViewer x:Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Themes:ListBoxChrome>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                    <Condition Property="IsSelectionActive" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
            </MultiTrigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>